{
  "name": "appointment_reminder_workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 9
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -464,
        -192
      ],
      "id": "e1f97706-13c3-4c9d-bf6c-878d15e68a45",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8e8bdd3b-de2e-4515-b00a-63890c424b11",
              "name": "=appointments",
              "value": "[   {     \"Patient Name\": \"Alice Smith\",     \"Appointment Date\": \"2025-08-01\",     \"Appointment Time\": \"10:00 AM\",     \"Phone Number\": \"+15551234567\"   },   {     \"Patient Name\": \"Bob Johnson\",     \"Appointment Date\": \"2025-08-01\",     \"Appointment Time\": \"02:30 PM\",     \"Phone Number\": \"+15559876543\"   },   {     \"Patient Name\": \"Charlie Brown\",     \"Appointment Date\": \"2025-07-29\",     \"Appointment Time\": \"11:00 AM\",     \"Phone Number\": \"+15552223333\"   },   {     \"Patient Name\": \"David Lee\",     \"Appointment Date\": \"2025-07-28\",     \"Appointment Time\": \"03:00 PM\",     \"Phone Number\": \"+15554445555\"   } ]",
              "type": "array"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -256,
        -192
      ],
      "id": "05347977-7ef9-47ff-a309-2c1e3241d220",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "const reminders = [];\nconst today = new Date();\ntoday.setHours(0, 0, 0, 0); // Normalize today's date to midnight\n\n// Calculate tomorrow's date\nconst tomorrow = new Date(today);\ntomorrow.setDate(today.getDate() + 1);\n\nfor (const item of $json.appointments) {\n  const appointmentDate = new Date(item['Appointment Date']);\n  appointmentDate.setHours(0, 0, 0, 0); // Normalize appointment date to midnight\n\n  // Check if the appointment is for tomorrow\n  if (appointmentDate.getTime() === tomorrow.getTime()) {\n    reminders.push({\n      message: `Hi ${item['Patient Name']},\\n\\nThis is a reminder for your appointment tomorrow, ${item['Appointment Date']} at ${item['Appointment Time']}. We look forward to seeing you!\\n\\nExaCare Clinic`,\n      phoneNumber: item['Phone Number'],\n      patientName: item['Patient Name']\n    });\n  }\n}\n\n// Return the filtered and formatted reminders.\n// Each reminder will be a separate item for the next node.\nreturn reminders.map(reminder => ({ json: reminder }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -48,
        -192
      ],
      "id": "916d1791-d1c9-479f-ab69-def8acaf3b81",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://httpbin.org/post",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "to",
              "value": "={{ $('Edit Fields').item.json.appointments }}"
            },
            {
              "name": "message",
              "value": "={{ $('Edit Fields').item.json.appointments }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        160,
        -192
      ],
      "id": "71df9077-f186-4b0a-8a12-974589c2ff99",
      "name": "HTTP Request"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b82baa42-7120-4110-b3d9-fa27e9590a4c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0cfa00f1a2f9887200f66e0721eace57abdb8d604da82bdc32a06e34b12ae2f8"
  },
  "id": "twOn45BFubwRngpf",
  "tags": []
}